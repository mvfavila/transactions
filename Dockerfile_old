# Use Go 1.22.2 as the base image for building the application
FROM golang:1.22.2-alpine AS builder

# Set the working directory inside the container
WORKDIR /app

# Install SQLite development tools
RUN apk add --no-cache gcc musl-dev sqlite-dev libgcc

# Copy go.mod and go.sum files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy the entire project directory into the container
COPY . .

# Build the application binary with CGO enabled
ENV CGO_ENABLED=1 GOOS=linux GOARCH=amd64
RUN go build -o transactions .

# Use a minimal base image to run the application
FROM alpine:latest

# Set the working directory inside the container
WORKDIR /app

# Install CA certificates and SQLite runtime libraries
RUN apk add --no-cache ca-certificates sqlite-libs

# Copy the built binary from the builder stage
COPY --from=builder /app/transactions .

# Copy the configuration directory
COPY config/ ./config/

# Ensure the binary has execution permissions
RUN chmod +x transactions

# Expose the application port
EXPOSE 8080

# Command to run the application
CMD ["./transactions"]